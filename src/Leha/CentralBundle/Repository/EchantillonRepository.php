<?php

namespace Leha\CentralBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Leha\CentralBundle\Entity\Attribut;
use Leha\CentralBundle\Specifications\Filters\Specification;
use Leha\CentralBundle\Entity\AttributEchantillon;
use Leha\CentralBundle\Model\HistorySearch;
use Leha\CentralBundle\Specifications\Filters\AsArray;
use Leha\CentralBundle\Specifications\Filters\FilterEchantillon;
use Leha\CentralBundle\Specifications\Filters\FilterAttributEchantillon;
use Leha\CentralBundle\Specifications\Filters\AndX;

/**
 * EchantillonRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EchantillonRepository extends EntityRepository
{
    /**
     * Ajoute la jointure externe vers les attributs
     *
     * @param \Doctrine\ORM\QueryBuilder $qb
     * @param string $alias
     *
     * @return mixed
     */
    private function joinAttributs($qb, $alias = 'e')
    {
        $qb->leftJoin($alias . '.echantillonAttributs', 'lea')
            ->leftJoin('lea.attribut', 'la')
            ->addSelect('la, lea');

        return $qb;
    }

    /**
     * Retourne une liste d'échantillon par rapport à des data postés et une collection d'AttributRequete
     *
     * @param $data
     * @param $formAttributesRequete
     *
     * @return DoctrineCollection|null
     */
    public function search($data, $formAttributesRequete)
	{
        $filters = array();

        array_walk($formAttributesRequete, function($formAttributeRequete, $key) use($data, &$filters)
        {
            $attribute = $formAttributeRequete->getAttribut();
            if (isset($data[$attribute->getName()])) {
                $filters[$attribute->getScope()][] = array(
                    'value' => $data[$attribute->getName()],
                    'attribut' => $attribute
                );
            }
        });

        if (empty($filters)) {
            return null;
        }

        $andX = new AndX();

        foreach ($filters as $scope => $filtersScope) {
            switch ($scope) {
                case Attribut::SCOPE_ECHANTILLON :
                    foreach ($filtersScope as $indice => $filter) {
                        $attribut = $filter['attribut'];
                        $andX->addChildren(new FilterEchantillon($attribut->getName(), $filter['value']));
                    }
                    break;
                case Attribut::SCOPE_ATTRIBUT :
                    foreach ($filtersScope as $indice => $filter) {
                        $attributEchantillon = new AttributEchantillon();
                        $attributEchantillon->setAttribut($filter['attribut']);
                        $attributEchantillon->setValue($filter['value']);

                        $andX->addChildren(new FilterAttributEchantillon($attributEchantillon, 'ea' . $indice));
                    }
                    break;
            }
        }

        return $this->match(new AsArray($andX));
	}

    /**
     * Recherche une liste d'échantillon en fonction d'une spec donnée
     *
     * @param Specification $specification
     *
     * @return DoctrineCollection
     */
    public function match(Specification $specification)
    {
        $qb = $this->createQueryBuilder('e');
        $qb = $this->joinAttributs($qb);

        $expr = $specification->match($qb, 'e');
        if (empty($expr)) {
            $query = $qb->getQuery();
        } else {
            $query = $qb->where($expr)->getQuery();
        }


        return $query->getResult();
    }
}
