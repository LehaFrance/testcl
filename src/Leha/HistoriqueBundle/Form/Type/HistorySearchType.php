<?php

namespace Leha\HistoriqueBundle\Form\Type;

use Leha\CentralBundle\Entity\Attribut;
use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolverInterface;

class HistorySearchType extends AbstractType
{
    /**
     * Returns the name of this type.
     *
     * @return string The name of this type
     */
    public function getName()
    {
        return 'leha_historique_history_search';
    }

    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        parent::buildForm($builder, $options);

        $echantillonProperties = array();
        $relatedAttributes = array();

        foreach ($options['attribut_requete'] as $attributRequete) {
            /**
             * @var $attribut \Leha\CentralBundle\Entity\Attribut
             */
            $attribut = $attributRequete->getAttribut();

            if ($attribut->getScope() == Attribut::SCOPE_ECHANTILLON) {
                $echantillonProperties[] = $attribut;
            } else {
                $relatedAttributes[] = $attribut;
            }
        }

        $builder->add('echantillon_properties', new SearchEchantillonType(), array('attribut_requete' => $echantillonProperties));
        $builder->add('related_attributes', new SearchAttributesType(), array('attribut_requete' => $relatedAttributes));
    }

    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        parent::setDefaultOptions($resolver); // TODO: Change the autogenerated stub

        $resolver
            ->setDefaults(array(
                'data_model' => 'Leha\HistoriqueBundle\Model\HistorySearch',
                'csrf_protection' => false
            ))->setRequired(array(
                'attribut_requete'
            )
        );
    }
}